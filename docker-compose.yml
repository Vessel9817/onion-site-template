# We use the reserved private subnet 10.5.0.0/16 (::ffff:a05:0/112)
# https://en.wikipedia.org/wiki/Reserved_IP_addresses
services:
  'tor':
    depends_on:
      - 'nginx'
    profiles:
      - 'production'
    build:
      context: './config/tor'
      dockerfile: './Dockerfile'
    networks:
      - 'tor'
      - 'nginx'
  'nginx':
    build:
      context: './config/nginx'
      dockerfile: './Dockerfile'
    networks:
      'nginx':
        ipv4_address: '10.5.0.2' # ::ffff:a05:2
  'nginx_debug':
    depends_on:
      - nginx
    profiles:
      - 'development'
    build:
      context: './config/nginx/debug'
      dockerfile: './Dockerfile'
    ports:
      - ':80'
    networks:
      'nginx':
        ipv4_address: '10.5.0.254' # ::ffff:a05:fe
  'express':
    build:
      context: './config/express'
      dockerfile: './Dockerfile'
    env_file:
      - './config/express/.env'
    networks:
      'express':
        ipv4_address: '10.5.2.2' # ::ffff:a05:202
      'kafka':
  'express_debug':
    depends_on:
      - express
    profiles:
      - 'development'
    build:
      context: './config/express/debug'
      dockerfile: './Dockerfile'
    ports:
      - ':3000'
    networks:
      'express':
        ipv4_address: '10.5.2.254' # ::ffff:a05:20fe
  'kafka':
    image: 'apache/kafka:3.8.0'
    depends_on:
      'express':
        condition: 'service_started'
        required: true
      'api':
        condition: 'service_started'
        required: false
    networks:
      'kafka':
        ipv4_address: '10.5.1.2' # ::ffff:a05:102
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '60dfc0be-bd99-4362-9712-63ae3d5026fd'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  'api':
    depends_on:
      - 'mongo'
    networks:
      - 'kafka'
  'mongo':
    restart: 'always'
    image: 'mongo:8.0.9'
    volumes:
      - 'mongo-db:/data/db'
      - 'mongo-configdb:/data/configdb'
    env_file:
      - './config/mongo/.env'
  'mongo_debug':
    depends_on:
      - 'mongo'
    profiles:
      - 'development'
    restart: 'always'
    image: 'mongo-express:1.0.2'
    ports:
      - ':8081'
    env_file:
      - './config/mongo/debug/.env'
    environment:
      # Theme demo:
      # https://codemirror.com/5/demo/theme.html#tomorrow-night-bright
      ME_CONFIG_OPTIONS_EDITORTHEME: 'tomorrow-night-bright'
volumes:
  'mongo-db':
  'mongo-configdb':
networks:
  'tor':
    driver: 'bridge'
    enable_ipv4: true
    enable_ipv6: true
    driver_opts:
      com.docker.network.bridge.gateway_mode_ipv4: 'nat'
      com.docker.network.bridge.gateway_mode_ipv6: 'nat'
  'nginx':
    driver: 'bridge'
    enable_ipv4: true
    enable_ipv6: false
    ipam:
      config:
        - subnet: '10.5.0.0/24' # ::ffff:a05:0/120
          gateway: '10.5.0.1' # ::ffff:a05:1
  'express':
    driver: 'bridge'
    enable_ipv4: true
    enable_ipv6: false
    ipam:
      config:
        - subnet: '10.5.2.0/24' # ::ffff:a05:200/120
          gateway: '10.5.2.1' # ::ffff:a05:201
  'kafka':
    driver: 'bridge'
    enable_ipv4: true
    enable_ipv6: false
    ipam:
      config:
        - subnet: '10.5.1.0/24' # ::ffff:a05:100/120
          gateway: '10.5.1.1' # ::ffff:a05:101
  'mongo':
    driver: 'bridge'
    enable_ipv4: true
    enable_ipv6: false
    ipam:
      config:
        - subnet: '10.5.3.0/24' # ::ffff:a05:300/120
          gateway: '10.5.3.1' # ::ffff:a05:301
